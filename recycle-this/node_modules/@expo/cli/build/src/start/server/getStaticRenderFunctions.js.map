{"version":3,"sources":["../../../../src/start/server/getStaticRenderFunctions.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport fetch from 'node-fetch';\nimport path from 'path';\nimport requireString from 'require-from-string';\nimport resolveFrom from 'resolve-from';\n\nimport { logMetroError } from './metro/metroErrorInterface';\nimport { getMetroServerRoot } from './middleware/ManifestMiddleware';\nimport { createBundleUrlPath } from './middleware/metroOptions';\nimport { stripAnsi } from '../../utils/ansi';\nimport { delayAsync } from '../../utils/delay';\nimport { SilentError } from '../../utils/errors';\nimport { memoize } from '../../utils/fn';\nimport { profile } from '../../utils/profile';\n\nconst debug = require('debug')('expo:start:server:node-renderer') as typeof console.log;\n\nfunction wrapBundle(str: string) {\n  // Skip the metro runtime so debugging is a bit easier.\n  // Replace the __r() call with an export statement.\n  // Use gm to apply to the last require line. This is needed when the bundle has side-effects.\n  return str.replace(/^(__r\\(.*\\);)$/gm, 'module.exports = $1');\n}\n\n// TODO(EvanBacon): Group all the code together and version.\nconst getRenderModuleId = (projectRoot: string): string => {\n  const moduleId = resolveFrom.silent(projectRoot, 'expo-router/node/render.js');\n  if (!moduleId) {\n    throw new Error(\n      `A version of expo-router with Node.js support is not installed in the project.`\n    );\n  }\n\n  return moduleId;\n};\n\ntype StaticRenderOptions = {\n  // Ensure the style format is `css-xxxx` (prod) instead of `css-view-xxxx` (dev)\n  dev?: boolean;\n  minify?: boolean;\n  platform?: string;\n  environment?: 'node';\n  engine?: 'hermes';\n  baseUrl: string;\n  routerRoot: string;\n};\n\nconst moveStaticRenderFunction = memoize(async (projectRoot: string, requiredModuleId: string) => {\n  // Copy the file into the project to ensure it works in monorepos.\n  // This means the file cannot have any relative imports.\n  const tempDir = path.join(projectRoot, '.expo/static');\n  await fs.promises.mkdir(tempDir, { recursive: true });\n  const moduleId = path.join(tempDir, 'render.js');\n  await fs.promises.writeFile(moduleId, await fs.promises.readFile(requiredModuleId, 'utf8'));\n  // Sleep to give watchman time to register the file.\n  await delayAsync(50);\n  return moduleId;\n});\n\n/** @returns the js file contents required to generate the static generation function. */\nasync function getStaticRenderFunctionsContentAsync(\n  projectRoot: string,\n  devServerUrl: string,\n  { dev = false, minify = false, environment, baseUrl, routerRoot }: StaticRenderOptions\n): Promise<string> {\n  const root = getMetroServerRoot(projectRoot);\n  const requiredModuleId = getRenderModuleId(root);\n  let moduleId = requiredModuleId;\n\n  // Cannot be accessed using Metro's server API, we need to move the file\n  // into the project root and try again.\n  if (path.relative(root, moduleId).startsWith('..')) {\n    moduleId = await moveStaticRenderFunction(projectRoot, requiredModuleId);\n  }\n\n  return requireFileContentsWithMetro(root, devServerUrl, moduleId, {\n    dev,\n    minify,\n    environment,\n    baseUrl,\n    routerRoot,\n  });\n}\n\nasync function ensureFileInRootDirectory(projectRoot: string, otherFile: string) {\n  // Cannot be accessed using Metro's server API, we need to move the file\n  // into the project root and try again.\n  if (!path.relative(projectRoot, otherFile).startsWith('..' + path.sep)) {\n    return otherFile;\n  }\n\n  // Copy the file into the project to ensure it works in monorepos.\n  // This means the file cannot have any relative imports.\n  const tempDir = path.join(projectRoot, '.expo/static-tmp');\n  await fs.promises.mkdir(tempDir, { recursive: true });\n  const moduleId = path.join(tempDir, path.basename(otherFile));\n  await fs.promises.writeFile(moduleId, await fs.promises.readFile(otherFile, 'utf8'));\n  // Sleep to give watchman time to register the file.\n  await delayAsync(50);\n  return moduleId;\n}\n\nexport async function createMetroEndpointAsync(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  {\n    dev = false,\n    platform = 'web',\n    minify = false,\n    environment,\n    engine = 'hermes',\n    baseUrl,\n    routerRoot,\n  }: StaticRenderOptions\n): Promise<string> {\n  const root = getMetroServerRoot(projectRoot);\n  const safeOtherFile = await ensureFileInRootDirectory(projectRoot, absoluteFilePath);\n  const serverPath = path.relative(root, safeOtherFile).replace(/\\.[jt]sx?$/, '');\n\n  const urlFragment = createBundleUrlPath({\n    platform,\n    mode: dev ? 'development' : 'production',\n    mainModuleName: serverPath,\n    engine,\n    environment,\n    lazy: false,\n    minify,\n    baseUrl,\n    isExporting: true,\n    asyncRoutes: false,\n    routerRoot,\n  });\n\n  const url = new URL(urlFragment.replace(/^\\//, ''), devServerUrl).toString();\n  debug('fetching from Metro:', root, serverPath, url);\n  return url;\n}\n\nclass MetroNodeError extends Error {\n  constructor(\n    message: string,\n    public rawObject: any\n  ) {\n    super(message);\n  }\n}\n\nexport async function requireFileContentsWithMetro(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  props: StaticRenderOptions\n): Promise<string> {\n  const url = await createMetroEndpointAsync(projectRoot, devServerUrl, absoluteFilePath, props);\n\n  const res = await fetch(url);\n\n  // TODO: Improve error handling\n  if (res.status === 500) {\n    const text = await res.text();\n    if (text.startsWith('{\"originModulePath\"') || text.startsWith('{\"type\":\"TransformError\"')) {\n      const errorObject = JSON.parse(text);\n\n      throw new MetroNodeError(stripAnsi(errorObject.message) ?? errorObject.message, errorObject);\n    }\n    throw new Error(`[${res.status}]: ${res.statusText}\\n${text}`);\n  }\n\n  if (!res.ok) {\n    throw new Error(`Error fetching bundle for static rendering: ${res.status} ${res.statusText}`);\n  }\n\n  const content = await res.text();\n\n  return wrapBundle(content);\n}\n\nexport async function getStaticRenderFunctions(\n  projectRoot: string,\n  devServerUrl: string,\n  options: StaticRenderOptions\n): Promise<Record<string, (...args: any[]) => Promise<any>>> {\n  const scriptContents = await getStaticRenderFunctionsContentAsync(\n    projectRoot,\n    devServerUrl,\n    options\n  );\n\n  return evalMetroAndWrapFunctions(projectRoot, scriptContents);\n}\n\nfunction evalMetroAndWrapFunctions<T = Record<string, (...args: any[]) => Promise<any>>>(\n  projectRoot: string,\n  script: string\n): Promise<T> {\n  const contents = evalMetro(script);\n\n  // wrap each function with a try/catch that uses Metro's error formatter\n  return Object.keys(contents).reduce((acc, key) => {\n    const fn = contents[key];\n    if (typeof fn !== 'function') {\n      return { ...acc, [key]: fn };\n    }\n\n    acc[key] = async function (...props: any[]) {\n      try {\n        return await fn.apply(this, props);\n      } catch (error: any) {\n        await logMetroError(projectRoot, { error });\n        throw new SilentError(error);\n      }\n    };\n    return acc;\n  }, {} as any);\n}\n\nfunction evalMetro(src: string) {\n  return profile(requireString, 'eval-metro-bundle')(src);\n}\n"],"names":["createMetroEndpointAsync","requireFileContentsWithMetro","getStaticRenderFunctions","debug","require","wrapBundle","str","replace","getRenderModuleId","projectRoot","moduleId","resolveFrom","silent","Error","moveStaticRenderFunction","memoize","requiredModuleId","tempDir","path","join","fs","promises","mkdir","recursive","writeFile","readFile","delayAsync","getStaticRenderFunctionsContentAsync","devServerUrl","dev","minify","environment","baseUrl","routerRoot","root","getMetroServerRoot","relative","startsWith","ensureFileInRootDirectory","otherFile","sep","basename","absoluteFilePath","platform","engine","safeOtherFile","serverPath","urlFragment","createBundleUrlPath","mode","mainModuleName","lazy","isExporting","asyncRoutes","url","URL","toString","MetroNodeError","constructor","message","rawObject","props","res","fetch","status","text","errorObject","JSON","parse","stripAnsi","statusText","ok","content","options","scriptContents","evalMetroAndWrapFunctions","script","contents","evalMetro","Object","keys","reduce","acc","key","fn","apply","error","logMetroError","SilentError","src","profile","requireString"],"mappings":"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"}